{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","helpers/getRandomDigits.ts","helpers/checkIsValidUrl.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","isValidValue","useState","touched","setTouched","id","Math","random","toString","slice","hasError","hasValueError","htmlFor","classNames","type","placeholder","event","target","onBlur","checkIsValidUrl","url","test","NewMovie","onAdd","count","setCount","titleValue","setTitleValue","descriptionValue","setDescriptionValue","imgUrlValue","setImgUrlValue","imdbUrlValue","setImdbUrlValue","imdbIdValue","setImdbIdValue","isImdbUrlValid","isImgUrlValid","isSubmitAllowed","every","field","trim","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c6b7f3f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Props } from './MovieCard.types';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getRandomDigits } from '../../helpers/getRandomDigits';\nimport { Props } from './TextField.types';\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  isValidValue = true,\n}) => {\n  const [touched, setTouched] = useState(false);\n\n  const id = `${name}-${getRandomDigits()}`;\n  const hasError = touched && required && !value;\n  const hasValueError = touched && !isValidValue;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasValueError && (\n        <p className=\"help is-danger\">Enter valid url</p>\n      )}\n    </div>\n  );\n};\n","export function getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n","export function checkIsValidUrl(url: string): boolean {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n}\n","import React, { FC, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { checkIsValidUrl } from '../../helpers/checkIsValidUrl';\nimport { Props } from './NewMovie.types';\n\nexport const NewMovie: FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [titleValue, setTitleValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [imgUrlValue, setImgUrlValue] = useState('');\n  const [imdbUrlValue, setImdbUrlValue] = useState('');\n  const [imdbIdValue, setImdbIdValue] = useState('');\n\n  const resetAll = () => {\n    setTitleValue('');\n    setDescriptionValue('');\n    setImgUrlValue('');\n    setImdbUrlValue('');\n    setImdbIdValue('');\n  };\n\n  const isImdbUrlValid = checkIsValidUrl(imgUrlValue);\n  const isImgUrlValid = checkIsValidUrl(imgUrlValue);\n\n  const isSubmitAllowed = isImdbUrlValid && isImgUrlValid\n  && [titleValue, imgUrlValue, imdbUrlValue, imdbIdValue].every(\n    field => field.trim() !== '',\n  );\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!isSubmitAllowed) {\n      return;\n    }\n\n    const newMovie: Movie = {\n      title: titleValue,\n      description: descriptionValue,\n      imgUrl: imgUrlValue,\n      imdbUrl: imdbUrlValue,\n      imdbId: imdbIdValue,\n    };\n\n    onAdd(newMovie);\n    setCount(prevCount => prevCount + 1);\n    resetAll();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleFormSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={titleValue}\n        onChange={setTitleValue}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={descriptionValue}\n        onChange={setDescriptionValue}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrlValue}\n        onChange={setImgUrlValue}\n        isValidValue={isImgUrlValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrlValue}\n        onChange={setImdbUrlValue}\n        isValidValue={isImdbUrlValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbIdValue}\n        onChange={setImdbIdValue}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isSubmitAllowed}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const handleOnAdd = (movie: Movie) => setMovies(\n    prevMovies => [...prevMovies, movie],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n\n        <MoviesList movies={movies} />\n\n      </div>\n      <div className=\"sidebar\">\n\n        <NewMovie\n          onAdd={handleOnAdd}\n        />\n\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}