{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","helpers/getRandomDigits.ts","helpers/isValidUrl.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","isValidUrl","useState","touched","setTouched","id","Math","random","toString","slice","hasError","hasUrlError","htmlFor","classNames","type","placeholder","event","target","onBlur","url","test","NewMovie","onAdd","count","setCount","titleValue","setTitleValue","descriptionValue","setDescriptionValue","imgUrlValue","setImgUrlValue","imdbUrlValue","setImdbUrlValue","imdbIdValue","setImdbIdValue","isImdbUrlValid","isImgUrlValid","isSubmitAllowed","onFormSubmit","preventDefault","prevCount","onSubmit","newTitleValue","newDescriptionValue","newImgUrlValue","newImdbUrlValue","newImdbIdValue","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c373bb5c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Props } from './MovieCard.types';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getRandomDigits } from '../../helpers/getRandomDigits';\nimport { Props } from './TextField.types';\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  isValidUrl = true,\n}) => {\n  const [touched, setTouched] = useState(false);\n\n  const id = `${name}-${getRandomDigits()}`;\n  const hasError = touched && required && !value;\n  const hasUrlError = touched && !isValidUrl;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasUrlError && (\n        <p className=\"help is-danger\">Enter valid url</p>\n      )}\n    </div>\n  );\n};\n","export function getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n","export function isValidUrl(url: string): boolean {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n}\n","import React, { FC, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { isValidUrl } from '../../helpers/isValidUrl';\nimport { Props } from './NewMovie.types';\n\nexport const NewMovie: FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [titleValue, setTitleValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [imgUrlValue, setImgUrlValue] = useState('');\n  const [imdbUrlValue, setImdbUrlValue] = useState('');\n  const [imdbIdValue, setImdbIdValue] = useState('');\n\n  const resetAll = () => {\n    setTitleValue('');\n    setDescriptionValue('');\n    setImgUrlValue('');\n    setImdbUrlValue('');\n    setImdbIdValue('');\n  };\n\n  const isImdbUrlValid = isValidUrl(imgUrlValue);\n  const isImgUrlValid = isValidUrl(imgUrlValue);\n\n  const isSubmitAllowed\n    = titleValue && imgUrlValue && imdbUrlValue\n    && imdbIdValue && isImdbUrlValid && isImgUrlValid;\n\n  const onFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (isSubmitAllowed) {\n      const newMovie: Movie = {\n        title: titleValue,\n        description: descriptionValue,\n        imgUrl: imgUrlValue,\n        imdbUrl: imdbUrlValue,\n        imdbId: imdbIdValue,\n      };\n\n      onAdd(newMovie);\n      setCount(prevCount => prevCount + 1);\n      resetAll();\n    }\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => onFormSubmit(event)}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={titleValue}\n        onChange={(newTitleValue) => {\n          setTitleValue(newTitleValue);\n        }}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={descriptionValue}\n        onChange={(newDescriptionValue) => {\n          setDescriptionValue(newDescriptionValue);\n        }}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrlValue}\n        onChange={(newImgUrlValue) => {\n          setImgUrlValue(newImgUrlValue);\n        }}\n        isValidUrl={isImgUrlValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrlValue}\n        onChange={(newImdbUrlValue) => {\n          setImdbUrlValue(newImdbUrlValue);\n        }}\n        isValidUrl={isImdbUrlValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbIdValue}\n        onChange={(newImdbIdValue) => {\n          setImdbIdValue(newImdbIdValue);\n        }}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isSubmitAllowed}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={(movie: Movie) => setMovies(\n            prevMovies => [...prevMovies, movie],\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}